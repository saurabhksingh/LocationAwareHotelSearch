/*
	SDZEanWsError.h
	The implementation of properties and methods for the SDZEanWsError object.
	Generated by SudzC.com
*/
#import "SDZEanWsError.h"

#import "SDZErrorAttributes.h"
#import "SDZServerInfo.h"
@implementation SDZEanWsError
	@synthesize itineraryId = _itineraryId;
	@synthesize handling = _handling;
	@synthesize category = _category;
	@synthesize exceptionConditionId = _exceptionConditionId;
	@synthesize ErrorAttributes = _ErrorAttributes;
	@synthesize presentationMessage = _presentationMessage;
	@synthesize verboseMessage = _verboseMessage;
	@synthesize ServerInfo = _ServerInfo;

	- (id) init
	{
		if(self = [super init])
		{
			self.handling = nil;
			self.category = nil;
			self.ErrorAttributes = nil; // [[SDZErrorAttributes alloc] init];
			self.presentationMessage = nil;
			self.verboseMessage = nil;
			self.ServerInfo = nil; // [[SDZServerInfo alloc] init];

		}
		return self;
	}

	+ (SDZEanWsError*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZEanWsError*)[[[SDZEanWsError alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.itineraryId = [[Soap getNodeValue: node withName: @"itineraryId"] longLongValue];
			self.handling = [Soap getNodeValue: node withName: @"handling"];
			self.category = [Soap getNodeValue: node withName: @"category"];
			self.exceptionConditionId = [[Soap getNodeValue: node withName: @"exceptionConditionId"] intValue];
			self.ErrorAttributes = [[SDZErrorAttributes createWithNode: [Soap getNode: node withName: @"ErrorAttributes"]] object];
			self.presentationMessage = [Soap getNodeValue: node withName: @"presentationMessage"];
			self.verboseMessage = [Soap getNodeValue: node withName: @"verboseMessage"];
			self.ServerInfo = [[SDZServerInfo createWithNode: [Soap getNode: node withName: @"ServerInfo"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"EanWsError"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<itineraryId>%@</itineraryId>", [NSString stringWithFormat: @"%ld", self.itineraryId]];
		if (self.handling != nil) [s appendFormat: @"<handling>%@</handling>", [[self.handling stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.category != nil) [s appendFormat: @"<category>%@</category>", [[self.category stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<exceptionConditionId>%@</exceptionConditionId>", [NSString stringWithFormat: @"%i", self.exceptionConditionId]];
		if (self.ErrorAttributes != nil) [s appendString: [self.ErrorAttributes serialize: @"ErrorAttributes"]];
		if (self.presentationMessage != nil) [s appendFormat: @"<presentationMessage>%@</presentationMessage>", [[self.presentationMessage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.verboseMessage != nil) [s appendFormat: @"<verboseMessage>%@</verboseMessage>", [[self.verboseMessage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.ServerInfo != nil) [s appendString: [self.ServerInfo serialize: @"ServerInfo"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZEanWsError class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.handling = nil;
		self.category = nil;
		self.ErrorAttributes = nil;
		self.presentationMessage = nil;
		self.verboseMessage = nil;
		self.ServerInfo = nil;
		[super dealloc];
	}

@end
