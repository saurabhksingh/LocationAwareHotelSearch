/*
	SDZHotelListRequest.h
	The implementation of properties and methods for the SDZHotelListRequest object.
	Generated by SudzC.com
*/
#import "SDZHotelListRequest.h"

#import "SDZRoomGroup.h"
@implementation SDZHotelListRequest
	@synthesize address = _address;
	@synthesize city = _city;
	@synthesize stateProvinceCode = _stateProvinceCode;
	@synthesize postalCode = _postalCode;
	@synthesize countryCode = _countryCode;
	@synthesize destinationId = _destinationId;
	@synthesize destinationString = _destinationString;
	@synthesize hotelIdList = _hotelIdList;
	@synthesize latitude = _latitude;
	@synthesize longitude = _longitude;
	@synthesize searchRadius = _searchRadius;
	@synthesize searchRadiusUnit = _searchRadiusUnit;
	@synthesize sort = _sort;
	@synthesize propertyName = _propertyName;
	@synthesize amenities = _amenities;
	@synthesize minStarRating = _minStarRating;
	@synthesize maxStarRating = _maxStarRating;
	@synthesize minTripAdvisorRating = _minTripAdvisorRating;
	@synthesize maxTripAdvisorRating = _maxTripAdvisorRating;
	@synthesize minRate = _minRate;
	@synthesize maxRate = _maxRate;
	@synthesize propertyCategory = _propertyCategory;
	@synthesize supplierType = _supplierType;
	@synthesize numberOfBedRooms = _numberOfBedRooms;
	@synthesize numberOfResults = _numberOfResults;
	@synthesize maxRatePlanCount = _maxRatePlanCount;
	@synthesize arrivalDate = _arrivalDate;
	@synthesize departureDate = _departureDate;
	@synthesize RoomGroup = _RoomGroup;
	@synthesize rateType = _rateType;
	@synthesize cacheLocation = _cacheLocation;
	@synthesize cacheKey = _cacheKey;
	@synthesize options = _options;
	@synthesize multiRoomAvail = _multiRoomAvail;
	@synthesize merchantScoringSource = _merchantScoringSource;
	@synthesize scoringAlgorithmId = _scoringAlgorithmId;
	@synthesize ignoreMmOverrides = _ignoreMmOverrides;
	@synthesize supplierCacheTolerance = _supplierCacheTolerance;
	@synthesize datelessSupplierSort = _datelessSupplierSort;

	- (id) init
	{
		if(self = [super init])
		{
			self.address = nil;
			self.city = nil;
			self.stateProvinceCode = nil;
			self.postalCode = nil;
			self.countryCode = nil;
			self.destinationId = nil;
			self.destinationString = nil;
			self.searchRadiusUnit = nil;
			self.sort = nil;
			self.propertyName = nil;
			self.propertyCategory = nil;
			self.supplierType = nil;
			self.arrivalDate = nil;
			self.departureDate = nil;
			self.RoomGroup = [[[NSMutableArray alloc] init] autorelease];
			self.rateType = nil;
			self.cacheLocation = nil;
			self.cacheKey = nil;
			self.options = nil;
			self.multiRoomAvail = nil;
			self.merchantScoringSource = nil;
			self.supplierCacheTolerance = nil;

		}
		return self;
	}

	+ (SDZHotelListRequest*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZHotelListRequest*)[[[SDZHotelListRequest alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.address = [Soap getNodeValue: node withName: @"address"];
			self.city = [Soap getNodeValue: node withName: @"city"];
			self.stateProvinceCode = [Soap getNodeValue: node withName: @"stateProvinceCode"];
			self.postalCode = [Soap getNodeValue: node withName: @"postalCode"];
			self.countryCode = [Soap getNodeValue: node withName: @"countryCode"];
			self.destinationId = [Soap getNodeValue: node withName: @"destinationId"];
			self.destinationString = [Soap getNodeValue: node withName: @"destinationString"];
			self.hotelIdList = [[Soap getNodeValue: node withName: @"hotelIdList"] longLongValue];
			self.latitude = [[Soap getNodeValue: node withName: @"latitude"] floatValue];
			self.longitude = [[Soap getNodeValue: node withName: @"longitude"] floatValue];
			self.searchRadius = [[Soap getNodeValue: node withName: @"searchRadius"] intValue];
			self.searchRadiusUnit = [Soap getNodeValue: node withName: @"searchRadiusUnit"];
			self.sort = [Soap getNodeValue: node withName: @"sort"];
			self.propertyName = [Soap getNodeValue: node withName: @"propertyName"];
			self.amenities = [[Soap getNodeValue: node withName: @"amenities"] intValue];
			self.minStarRating = [[Soap getNodeValue: node withName: @"minStarRating"] floatValue];
			self.maxStarRating = [[Soap getNodeValue: node withName: @"maxStarRating"] floatValue];
			self.minTripAdvisorRating = [[Soap getNodeValue: node withName: @"minTripAdvisorRating"] floatValue];
			self.maxTripAdvisorRating = [[Soap getNodeValue: node withName: @"maxTripAdvisorRating"] floatValue];
			self.minRate = [[Soap getNodeValue: node withName: @"minRate"] intValue];
			self.maxRate = [[Soap getNodeValue: node withName: @"maxRate"] intValue];
			self.propertyCategory = [Soap getNodeValue: node withName: @"propertyCategory"];
			self.supplierType = [Soap getNodeValue: node withName: @"supplierType"];
			self.numberOfBedRooms = [[Soap getNodeValue: node withName: @"numberOfBedRooms"] intValue];
			self.numberOfResults = [[Soap getNodeValue: node withName: @"numberOfResults"] intValue];
			self.maxRatePlanCount = [[Soap getNodeValue: node withName: @"maxRatePlanCount"] intValue];
			self.arrivalDate = [Soap getNodeValue: node withName: @"arrivalDate"];
			self.departureDate = [Soap getNodeValue: node withName: @"departureDate"];
			self.RoomGroup = [[SDZRoomGroup createWithNode: [Soap getNode: node withName: @"RoomGroup"]] object];
			self.rateType = [Soap getNodeValue: node withName: @"rateType"];
			self.cacheLocation = [Soap getNodeValue: node withName: @"cacheLocation"];
			self.cacheKey = [Soap getNodeValue: node withName: @"cacheKey"];
			self.options = [Soap getNodeValue: node withName: @"options"];
			self.multiRoomAvail = [Soap getNodeValue: node withName: @"multiRoomAvail"];
			self.merchantScoringSource = [Soap getNodeValue: node withName: @"merchantScoringSource"];
			self.scoringAlgorithmId = [[Soap getNodeValue: node withName: @"scoringAlgorithmId"] intValue];
			self.ignoreMmOverrides = [[Soap getNodeValue: node withName: @"ignoreMmOverrides"] boolValue];
			self.supplierCacheTolerance = [Soap getNodeValue: node withName: @"supplierCacheTolerance"];
			self.datelessSupplierSort = [[Soap getNodeValue: node withName: @"datelessSupplierSort"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"HotelListRequest"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.address != nil) [s appendFormat: @"<address>%@</address>", [[self.address stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.city != nil) [s appendFormat: @"<city>%@</city>", [[self.city stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.stateProvinceCode != nil) [s appendFormat: @"<stateProvinceCode>%@</stateProvinceCode>", [[self.stateProvinceCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.postalCode != nil) [s appendFormat: @"<postalCode>%@</postalCode>", [[self.postalCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.countryCode != nil) [s appendFormat: @"<countryCode>%@</countryCode>", [[self.countryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.destinationId != nil) [s appendFormat: @"<destinationId>%@</destinationId>", [[self.destinationId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.destinationString != nil) [s appendFormat: @"<destinationString>%@</destinationString>", [[self.destinationString stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<hotelIdList>%@</hotelIdList>", [NSString stringWithFormat: @"%ld", self.hotelIdList]];
		[s appendFormat: @"<latitude>%@</latitude>", [NSString stringWithFormat: @"%f", self.latitude]];
		[s appendFormat: @"<longitude>%@</longitude>", [NSString stringWithFormat: @"%f", self.longitude]];
		[s appendFormat: @"<searchRadius>%@</searchRadius>", [NSString stringWithFormat: @"%i", self.searchRadius]];
		if (self.searchRadiusUnit != nil) [s appendFormat: @"<searchRadiusUnit>%@</searchRadiusUnit>", [[self.searchRadiusUnit stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.sort != nil) [s appendFormat: @"<sort>%@</sort>", [[self.sort stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.propertyName != nil) [s appendFormat: @"<propertyName>%@</propertyName>", [[self.propertyName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<amenities>%@</amenities>", [NSString stringWithFormat: @"%i", self.amenities]];
		[s appendFormat: @"<minStarRating>%@</minStarRating>", [NSString stringWithFormat: @"%f", self.minStarRating]];
		[s appendFormat: @"<maxStarRating>%@</maxStarRating>", [NSString stringWithFormat: @"%f", self.maxStarRating]];
		[s appendFormat: @"<minTripAdvisorRating>%@</minTripAdvisorRating>", [NSString stringWithFormat: @"%f", self.minTripAdvisorRating]];
		[s appendFormat: @"<maxTripAdvisorRating>%@</maxTripAdvisorRating>", [NSString stringWithFormat: @"%f", self.maxTripAdvisorRating]];
		[s appendFormat: @"<minRate>%@</minRate>", [NSString stringWithFormat: @"%i", self.minRate]];
		[s appendFormat: @"<maxRate>%@</maxRate>", [NSString stringWithFormat: @"%i", self.maxRate]];
		if (self.propertyCategory != nil) [s appendFormat: @"<propertyCategory>%@</propertyCategory>", [[self.propertyCategory stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.supplierType != nil) [s appendFormat: @"<supplierType>%@</supplierType>", [[self.supplierType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<numberOfBedRooms>%@</numberOfBedRooms>", [NSString stringWithFormat: @"%i", self.numberOfBedRooms]];
		[s appendFormat: @"<numberOfResults>%@</numberOfResults>", [NSString stringWithFormat: @"%i", self.numberOfResults]];
		[s appendFormat: @"<maxRatePlanCount>%@</maxRatePlanCount>", [NSString stringWithFormat: @"%i", self.maxRatePlanCount]];
		if (self.arrivalDate != nil) [s appendFormat: @"<arrivalDate>%@</arrivalDate>", [[self.arrivalDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.departureDate != nil) [s appendFormat: @"<departureDate>%@</departureDate>", [[self.departureDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RoomGroup != nil && self.RoomGroup.count > 0) {
			[s appendFormat: @"<RoomGroup>%@</RoomGroup>", [SDZRoomGroup serialize: self.RoomGroup]];
		} else {
			[s appendString: @"<RoomGroup/>"];
		}
		if (self.rateType != nil) [s appendFormat: @"<rateType>%@</rateType>", [[self.rateType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.cacheLocation != nil) [s appendFormat: @"<cacheLocation>%@</cacheLocation>", [[self.cacheLocation stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.cacheKey != nil) [s appendFormat: @"<cacheKey>%@</cacheKey>", [[self.cacheKey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.options != nil) [s appendFormat: @"<options>%@</options>", [[self.options stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.multiRoomAvail != nil) [s appendFormat: @"<multiRoomAvail>%@</multiRoomAvail>", [[self.multiRoomAvail stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.merchantScoringSource != nil) [s appendFormat: @"<merchantScoringSource>%@</merchantScoringSource>", [[self.merchantScoringSource stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<scoringAlgorithmId>%@</scoringAlgorithmId>", [NSString stringWithFormat: @"%i", self.scoringAlgorithmId]];
		[s appendFormat: @"<ignoreMmOverrides>%@</ignoreMmOverrides>", (self.ignoreMmOverrides)?@"true":@"false"];
		if (self.supplierCacheTolerance != nil) [s appendFormat: @"<supplierCacheTolerance>%@</supplierCacheTolerance>", [[self.supplierCacheTolerance stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<datelessSupplierSort>%@</datelessSupplierSort>", (self.datelessSupplierSort)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZHotelListRequest class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.address = nil;
		self.city = nil;
		self.stateProvinceCode = nil;
		self.postalCode = nil;
		self.countryCode = nil;
		self.destinationId = nil;
		self.destinationString = nil;
		self.searchRadiusUnit = nil;
		self.sort = nil;
		self.propertyName = nil;
		self.propertyCategory = nil;
		self.supplierType = nil;
		self.arrivalDate = nil;
		self.departureDate = nil;
		self.RoomGroup = nil;
		self.rateType = nil;
		self.cacheLocation = nil;
		self.cacheKey = nil;
		self.options = nil;
		self.multiRoomAvail = nil;
		self.merchantScoringSource = nil;
		self.supplierCacheTolerance = nil;
		[super dealloc];
	}

@end
