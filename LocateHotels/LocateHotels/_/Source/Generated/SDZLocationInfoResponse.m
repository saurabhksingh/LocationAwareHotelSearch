/*
	SDZLocationInfoResponse.h
	The implementation of properties and methods for the SDZLocationInfoResponse object.
	Generated by SudzC.com
*/
#import "SDZLocationInfoResponse.h"

#import "SDZLocationInfos.h"
@implementation SDZLocationInfoResponse
	@synthesize LocationInfos = _LocationInfos;

	- (id) init
	{
		if(self = [super init])
		{
			self.LocationInfos = [[[NSMutableArray alloc] init] autorelease];

		}
		return self;
	}

	+ (SDZLocationInfoResponse*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZLocationInfoResponse*)[[[SDZLocationInfoResponse alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.LocationInfos = [[SDZLocationInfos createWithNode: [Soap getNode: node withName: @"LocationInfos"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"LocationInfoResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.LocationInfos != nil && self.LocationInfos.count > 0) {
			[s appendFormat: @"<LocationInfos>%@</LocationInfos>", [SDZLocationInfos serialize: self.LocationInfos]];
		} else {
			[s appendString: @"<LocationInfos/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZLocationInfoResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.LocationInfos = nil;
		[super dealloc];
	}

@end
