/*
	SDZBaseRequest.h
	The implementation of properties and methods for the SDZBaseRequest object.
	Generated by SudzC.com
*/
#import "SDZBaseRequest.h"

#import "SDZmapEntry.h"
@implementation SDZBaseRequest
	@synthesize apiKey = _apiKey;
	@synthesize cid = _cid;
	@synthesize customerIpAddress = _customerIpAddress;
	@synthesize customerSessionId = _customerSessionId;
	@synthesize customerUserAgent = _customerUserAgent;
	@synthesize locale = _locale;
	@synthesize currencyCode = _currencyCode;
	@synthesize additionalData = _additionalData;
	@synthesize sig = _sig;
	@synthesize debug = _debug;
	@synthesize test = _test;

	- (id) init
	{
		if(self = [super init])
		{
			self.apiKey = nil;
			self.customerIpAddress = nil;
			self.customerSessionId = nil;
			self.customerUserAgent = nil;
			self.locale = nil;
			self.currencyCode = nil;
			self.additionalData = nil; // [[SDZmapEntry alloc] init];
			self.sig = nil;

		}
		return self;
	}

	+ (SDZBaseRequest*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZBaseRequest*)[[[SDZBaseRequest alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.apiKey = [Soap getNodeValue: node withName: @"apiKey"];
			self.cid = [[Soap getNodeValue: node withName: @"cid"] longLongValue];
			self.customerIpAddress = [Soap getNodeValue: node withName: @"customerIpAddress"];
			self.customerSessionId = [Soap getNodeValue: node withName: @"customerSessionId"];
			self.customerUserAgent = [Soap getNodeValue: node withName: @"customerUserAgent"];
			self.locale = [Soap getNodeValue: node withName: @"locale"];
			self.currencyCode = [Soap getNodeValue: node withName: @"currencyCode"];
			self.additionalData = [[SDZmapEntry createWithNode: [Soap getNode: node withName: @"additionalData"]] object];
			self.sig = [Soap getNodeValue: node withName: @"sig"];
			self.debug = [[Soap getNodeValue: node withName: @"debug"] boolValue];
			self.test = [[Soap getNodeValue: node withName: @"test"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"BaseRequest"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.apiKey != nil) [s appendFormat: @"<apiKey>%@</apiKey>", [[self.apiKey stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<cid>%@</cid>", [NSString stringWithFormat: @"%ld", self.cid]];
		if (self.customerIpAddress != nil) [s appendFormat: @"<customerIpAddress>%@</customerIpAddress>", [[self.customerIpAddress stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.customerSessionId != nil) [s appendFormat: @"<customerSessionId>%@</customerSessionId>", [[self.customerSessionId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.customerUserAgent != nil) [s appendFormat: @"<customerUserAgent>%@</customerUserAgent>", [[self.customerUserAgent stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.locale != nil) [s appendFormat: @"<locale>%@</locale>", [[self.locale stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.currencyCode != nil) [s appendFormat: @"<currencyCode>%@</currencyCode>", [[self.currencyCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.additionalData != nil) [s appendString: [self.additionalData serialize: @"additionalData"]];
		if (self.sig != nil) [s appendFormat: @"<sig>%@</sig>", [[self.sig stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<debug>%@</debug>", (self.debug)?@"true":@"false"];
		[s appendFormat: @"<test>%@</test>", (self.test)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZBaseRequest class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.apiKey = nil;
		self.customerIpAddress = nil;
		self.customerSessionId = nil;
		self.customerUserAgent = nil;
		self.locale = nil;
		self.currencyCode = nil;
		self.additionalData = nil;
		self.sig = nil;
		[super dealloc];
	}

@end
