/*
	SDZHotelRoomReservationResponse.h
	The implementation of properties and methods for the SDZHotelRoomReservationResponse object.
	Generated by SudzC.com
*/
#import "SDZHotelRoomReservationResponse.h"

#import "SDZHotelRateInfo.h"
#import "SDZRoomGroup.h"
#import "SDZCancelPolicyInfoList.h"
#import "SDZCouponInformationResponse.h"
#import "SDZRateInfos.h"
@implementation SDZHotelRoomReservationResponse
	@synthesize itineraryId = _itineraryId;
	@synthesize confirmationNumbers = _confirmationNumbers;
	@synthesize RateInfo = _RateInfo;
	@synthesize processedWithConfirmation = _processedWithConfirmation;
	@synthesize errorText = _errorText;
	@synthesize hotelReplyText = _hotelReplyText;
	@synthesize supplierType = _supplierType;
	@synthesize reservationStatusCode = _reservationStatusCode;
	@synthesize existingItinerary = _existingItinerary;
	@synthesize numberOfRoomsBooked = _numberOfRoomsBooked;
	@synthesize RoomGroup = _RoomGroup;
	@synthesize drivingDirections = _drivingDirections;
	@synthesize checkInInstructions = _checkInInstructions;
	@synthesize arrivalDate = _arrivalDate;
	@synthesize departureDate = _departureDate;
	@synthesize hotelName = _hotelName;
	@synthesize hotelAddress = _hotelAddress;
	@synthesize hotelCity = _hotelCity;
	@synthesize hotelStateProvinceCode = _hotelStateProvinceCode;
	@synthesize hotelPostalCode = _hotelPostalCode;
	@synthesize hotelCountryCode = _hotelCountryCode;
	@synthesize roomDescription = _roomDescription;
	@synthesize tripAdvisorRating = _tripAdvisorRating;
	@synthesize tripAdvisorReviewCount = _tripAdvisorReviewCount;
	@synthesize tripAdvisorRatingUrl = _tripAdvisorRatingUrl;
	@synthesize cancellationPolicy = _cancellationPolicy;
	@synthesize CancelPolicyInfoList = _CancelPolicyInfoList;
	@synthesize nonRefundable = _nonRefundable;
	@synthesize rateOccupancyPerRoom = _rateOccupancyPerRoom;
	@synthesize CouponInformationResponse = _CouponInformationResponse;
	@synthesize RateInfos = _RateInfos;

	- (id) init
	{
		if(self = [super init])
		{
			self.confirmationNumbers = nil;
			self.RateInfo = nil; // [[SDZHotelRateInfo alloc] init];
			self.errorText = nil;
			self.hotelReplyText = nil;
			self.supplierType = nil;
			self.reservationStatusCode = nil;
			self.RoomGroup = [[[NSMutableArray alloc] init] autorelease];
			self.drivingDirections = nil;
			self.checkInInstructions = nil;
			self.arrivalDate = nil;
			self.departureDate = nil;
			self.hotelName = nil;
			self.hotelAddress = nil;
			self.hotelCity = nil;
			self.hotelStateProvinceCode = nil;
			self.hotelPostalCode = nil;
			self.hotelCountryCode = nil;
			self.roomDescription = nil;
			self.tripAdvisorRating = nil;
			self.tripAdvisorRatingUrl = nil;
			self.cancellationPolicy = nil;
			self.CancelPolicyInfoList = [[[NSMutableArray alloc] init] autorelease];
			self.CouponInformationResponse = nil; // [[SDZCouponInformationResponse alloc] init];
			self.RateInfos = [[[NSMutableArray alloc] init] autorelease];

		}
		return self;
	}

	+ (SDZHotelRoomReservationResponse*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZHotelRoomReservationResponse*)[[[SDZHotelRoomReservationResponse alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.itineraryId = [[Soap getNodeValue: node withName: @"itineraryId"] longLongValue];
			self.confirmationNumbers = [Soap getNodeValue: node withName: @"confirmationNumbers"];
			self.RateInfo = [[SDZHotelRateInfo createWithNode: [Soap getNode: node withName: @"RateInfo"]] object];
			self.processedWithConfirmation = [[Soap getNodeValue: node withName: @"processedWithConfirmation"] boolValue];
			self.errorText = [Soap getNodeValue: node withName: @"errorText"];
			self.hotelReplyText = [Soap getNodeValue: node withName: @"hotelReplyText"];
			self.supplierType = [Soap getNodeValue: node withName: @"supplierType"];
			self.reservationStatusCode = [Soap getNodeValue: node withName: @"reservationStatusCode"];
			self.existingItinerary = [[Soap getNodeValue: node withName: @"existingItinerary"] boolValue];
			self.numberOfRoomsBooked = [[Soap getNodeValue: node withName: @"numberOfRoomsBooked"] intValue];
			self.RoomGroup = [[SDZRoomGroup createWithNode: [Soap getNode: node withName: @"RoomGroup"]] object];
			self.drivingDirections = [Soap getNodeValue: node withName: @"drivingDirections"];
			self.checkInInstructions = [Soap getNodeValue: node withName: @"checkInInstructions"];
			self.arrivalDate = [Soap getNodeValue: node withName: @"arrivalDate"];
			self.departureDate = [Soap getNodeValue: node withName: @"departureDate"];
			self.hotelName = [Soap getNodeValue: node withName: @"hotelName"];
			self.hotelAddress = [Soap getNodeValue: node withName: @"hotelAddress"];
			self.hotelCity = [Soap getNodeValue: node withName: @"hotelCity"];
			self.hotelStateProvinceCode = [Soap getNodeValue: node withName: @"hotelStateProvinceCode"];
			self.hotelPostalCode = [Soap getNodeValue: node withName: @"hotelPostalCode"];
			self.hotelCountryCode = [Soap getNodeValue: node withName: @"hotelCountryCode"];
			self.roomDescription = [Soap getNodeValue: node withName: @"roomDescription"];
			self.tripAdvisorRating = [Soap getNodeValue: node withName: @"tripAdvisorRating"];
			self.tripAdvisorReviewCount = [[Soap getNodeValue: node withName: @"tripAdvisorReviewCount"] intValue];
			self.tripAdvisorRatingUrl = [Soap getNodeValue: node withName: @"tripAdvisorRatingUrl"];
			self.cancellationPolicy = [Soap getNodeValue: node withName: @"cancellationPolicy"];
			self.CancelPolicyInfoList = [[SDZCancelPolicyInfoList createWithNode: [Soap getNode: node withName: @"CancelPolicyInfoList"]] object];
			self.nonRefundable = [[Soap getNodeValue: node withName: @"nonRefundable"] boolValue];
			self.rateOccupancyPerRoom = [[Soap getNodeValue: node withName: @"rateOccupancyPerRoom"] intValue];
			self.CouponInformationResponse = [[SDZCouponInformationResponse createWithNode: [Soap getNode: node withName: @"CouponInformationResponse"]] object];
			self.RateInfos = [[SDZRateInfos createWithNode: [Soap getNode: node withName: @"RateInfos"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"HotelRoomReservationResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<itineraryId>%@</itineraryId>", [NSString stringWithFormat: @"%ld", self.itineraryId]];
		if (self.confirmationNumbers != nil) [s appendFormat: @"<confirmationNumbers>%@</confirmationNumbers>", [[self.confirmationNumbers stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.RateInfo != nil) [s appendString: [self.RateInfo serialize: @"RateInfo"]];
		[s appendFormat: @"<processedWithConfirmation>%@</processedWithConfirmation>", (self.processedWithConfirmation)?@"true":@"false"];
		if (self.errorText != nil) [s appendFormat: @"<errorText>%@</errorText>", [[self.errorText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelReplyText != nil) [s appendFormat: @"<hotelReplyText>%@</hotelReplyText>", [[self.hotelReplyText stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.supplierType != nil) [s appendFormat: @"<supplierType>%@</supplierType>", [[self.supplierType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.reservationStatusCode != nil) [s appendFormat: @"<reservationStatusCode>%@</reservationStatusCode>", [[self.reservationStatusCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<existingItinerary>%@</existingItinerary>", (self.existingItinerary)?@"true":@"false"];
		[s appendFormat: @"<numberOfRoomsBooked>%@</numberOfRoomsBooked>", [NSString stringWithFormat: @"%i", self.numberOfRoomsBooked]];
		if (self.RoomGroup != nil && self.RoomGroup.count > 0) {
			[s appendFormat: @"<RoomGroup>%@</RoomGroup>", [SDZRoomGroup serialize: self.RoomGroup]];
		} else {
			[s appendString: @"<RoomGroup/>"];
		}
		if (self.drivingDirections != nil) [s appendFormat: @"<drivingDirections>%@</drivingDirections>", [[self.drivingDirections stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.checkInInstructions != nil) [s appendFormat: @"<checkInInstructions>%@</checkInInstructions>", [[self.checkInInstructions stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.arrivalDate != nil) [s appendFormat: @"<arrivalDate>%@</arrivalDate>", [[self.arrivalDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.departureDate != nil) [s appendFormat: @"<departureDate>%@</departureDate>", [[self.departureDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelName != nil) [s appendFormat: @"<hotelName>%@</hotelName>", [[self.hotelName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelAddress != nil) [s appendFormat: @"<hotelAddress>%@</hotelAddress>", [[self.hotelAddress stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelCity != nil) [s appendFormat: @"<hotelCity>%@</hotelCity>", [[self.hotelCity stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelStateProvinceCode != nil) [s appendFormat: @"<hotelStateProvinceCode>%@</hotelStateProvinceCode>", [[self.hotelStateProvinceCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelPostalCode != nil) [s appendFormat: @"<hotelPostalCode>%@</hotelPostalCode>", [[self.hotelPostalCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.hotelCountryCode != nil) [s appendFormat: @"<hotelCountryCode>%@</hotelCountryCode>", [[self.hotelCountryCode stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.roomDescription != nil) [s appendFormat: @"<roomDescription>%@</roomDescription>", [[self.roomDescription stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.tripAdvisorRating != nil) [s appendFormat: @"<tripAdvisorRating>%@</tripAdvisorRating>", [[self.tripAdvisorRating stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<tripAdvisorReviewCount>%@</tripAdvisorReviewCount>", [NSString stringWithFormat: @"%i", self.tripAdvisorReviewCount]];
		if (self.tripAdvisorRatingUrl != nil) [s appendFormat: @"<tripAdvisorRatingUrl>%@</tripAdvisorRatingUrl>", [[self.tripAdvisorRatingUrl stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.cancellationPolicy != nil) [s appendFormat: @"<cancellationPolicy>%@</cancellationPolicy>", [[self.cancellationPolicy stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.CancelPolicyInfoList != nil && self.CancelPolicyInfoList.count > 0) {
			[s appendFormat: @"<CancelPolicyInfoList>%@</CancelPolicyInfoList>", [SDZCancelPolicyInfoList serialize: self.CancelPolicyInfoList]];
		} else {
			[s appendString: @"<CancelPolicyInfoList/>"];
		}
		[s appendFormat: @"<nonRefundable>%@</nonRefundable>", (self.nonRefundable)?@"true":@"false"];
		[s appendFormat: @"<rateOccupancyPerRoom>%@</rateOccupancyPerRoom>", [NSString stringWithFormat: @"%i", self.rateOccupancyPerRoom]];
		if (self.CouponInformationResponse != nil) [s appendString: [self.CouponInformationResponse serialize: @"CouponInformationResponse"]];
		if (self.RateInfos != nil && self.RateInfos.count > 0) {
			[s appendFormat: @"<RateInfos>%@</RateInfos>", [SDZRateInfos serialize: self.RateInfos]];
		} else {
			[s appendString: @"<RateInfos/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZHotelRoomReservationResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.confirmationNumbers = nil;
		self.RateInfo = nil;
		self.errorText = nil;
		self.hotelReplyText = nil;
		self.supplierType = nil;
		self.reservationStatusCode = nil;
		self.RoomGroup = nil;
		self.drivingDirections = nil;
		self.checkInInstructions = nil;
		self.arrivalDate = nil;
		self.departureDate = nil;
		self.hotelName = nil;
		self.hotelAddress = nil;
		self.hotelCity = nil;
		self.hotelStateProvinceCode = nil;
		self.hotelPostalCode = nil;
		self.hotelCountryCode = nil;
		self.roomDescription = nil;
		self.tripAdvisorRating = nil;
		self.tripAdvisorRatingUrl = nil;
		self.cancellationPolicy = nil;
		self.CancelPolicyInfoList = nil;
		self.CouponInformationResponse = nil;
		self.RateInfos = nil;
		[super dealloc];
	}

@end
