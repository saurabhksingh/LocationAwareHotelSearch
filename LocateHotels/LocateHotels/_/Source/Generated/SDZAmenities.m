/*
	SDZAmenities.h
	The implementation of properties and methods for the SDZAmenities object.
	Generated by SudzC.com
*/
#import "SDZAmenities.h"

@implementation SDZAmenities
	@synthesize businessCenter = _businessCenter;
	@synthesize fitnessCenter = _fitnessCenter;
	@synthesize hotTubOnsite = _hotTubOnsite;
	@synthesize interAccessAvailable = _interAccessAvailable;
	@synthesize childrensActivities = _childrensActivities;
	@synthesize kitchenOrKitchinette = _kitchenOrKitchinette;
	@synthesize petsAllowed = _petsAllowed;
	@synthesize pool = _pool;
	@synthesize restaurantOnsite = _restaurantOnsite;
	@synthesize spaOnsite = _spaOnsite;
	@synthesize whirlPoolBathAvailable = _whirlPoolBathAvailable;

	- (id) init
	{
		if(self = [super init])
		{

		}
		return self;
	}

	+ (SDZAmenities*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZAmenities*)[[[SDZAmenities alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.businessCenter = [[Soap getNodeValue: node withName: @"businessCenter"] boolValue];
			self.fitnessCenter = [[Soap getNodeValue: node withName: @"fitnessCenter"] boolValue];
			self.hotTubOnsite = [[Soap getNodeValue: node withName: @"hotTubOnsite"] boolValue];
			self.interAccessAvailable = [[Soap getNodeValue: node withName: @"interAccessAvailable"] boolValue];
			self.childrensActivities = [[Soap getNodeValue: node withName: @"childrensActivities"] boolValue];
			self.kitchenOrKitchinette = [[Soap getNodeValue: node withName: @"kitchenOrKitchinette"] boolValue];
			self.petsAllowed = [[Soap getNodeValue: node withName: @"petsAllowed"] boolValue];
			self.pool = [[Soap getNodeValue: node withName: @"pool"] boolValue];
			self.restaurantOnsite = [[Soap getNodeValue: node withName: @"restaurantOnsite"] boolValue];
			self.spaOnsite = [[Soap getNodeValue: node withName: @"spaOnsite"] boolValue];
			self.whirlPoolBathAvailable = [[Soap getNodeValue: node withName: @"whirlPoolBathAvailable"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Amenities"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<businessCenter>%@</businessCenter>", (self.businessCenter)?@"true":@"false"];
		[s appendFormat: @"<fitnessCenter>%@</fitnessCenter>", (self.fitnessCenter)?@"true":@"false"];
		[s appendFormat: @"<hotTubOnsite>%@</hotTubOnsite>", (self.hotTubOnsite)?@"true":@"false"];
		[s appendFormat: @"<interAccessAvailable>%@</interAccessAvailable>", (self.interAccessAvailable)?@"true":@"false"];
		[s appendFormat: @"<childrensActivities>%@</childrensActivities>", (self.childrensActivities)?@"true":@"false"];
		[s appendFormat: @"<kitchenOrKitchinette>%@</kitchenOrKitchinette>", (self.kitchenOrKitchinette)?@"true":@"false"];
		[s appendFormat: @"<petsAllowed>%@</petsAllowed>", (self.petsAllowed)?@"true":@"false"];
		[s appendFormat: @"<pool>%@</pool>", (self.pool)?@"true":@"false"];
		[s appendFormat: @"<restaurantOnsite>%@</restaurantOnsite>", (self.restaurantOnsite)?@"true":@"false"];
		[s appendFormat: @"<spaOnsite>%@</spaOnsite>", (self.spaOnsite)?@"true":@"false"];
		[s appendFormat: @"<whirlPoolBathAvailable>%@</whirlPoolBathAvailable>", (self.whirlPoolBathAvailable)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZAmenities class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		[super dealloc];
	}

@end
