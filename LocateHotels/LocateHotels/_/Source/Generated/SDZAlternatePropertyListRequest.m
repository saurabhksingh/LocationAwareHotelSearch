/*
	SDZAlternatePropertyListRequest.h
	The implementation of properties and methods for the SDZAlternatePropertyListRequest object.
	Generated by SudzC.com
*/
#import "SDZAlternatePropertyListRequest.h"

#import "SDZRoomGroup.h"
@implementation SDZAlternatePropertyListRequest
	@synthesize originalHotelId = _originalHotelId;
	@synthesize arrivalDate = _arrivalDate;
	@synthesize departureDate = _departureDate;
	@synthesize originalAverageNightlyRate = _originalAverageNightlyRate;
	@synthesize RoomGroup = _RoomGroup;
	@synthesize rateType = _rateType;
	@synthesize priceType = _priceType;

	- (id) init
	{
		if(self = [super init])
		{
			self.arrivalDate = nil;
			self.departureDate = nil;
			self.RoomGroup = [[[NSMutableArray alloc] init] autorelease];
			self.rateType = nil;

		}
		return self;
	}

	+ (SDZAlternatePropertyListRequest*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZAlternatePropertyListRequest*)[[[SDZAlternatePropertyListRequest alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.originalHotelId = [[Soap getNodeValue: node withName: @"originalHotelId"] longLongValue];
			self.arrivalDate = [Soap getNodeValue: node withName: @"arrivalDate"];
			self.departureDate = [Soap getNodeValue: node withName: @"departureDate"];
			self.originalAverageNightlyRate = [[Soap getNodeValue: node withName: @"originalAverageNightlyRate"] floatValue];
			self.RoomGroup = [[SDZRoomGroup createWithNode: [Soap getNode: node withName: @"RoomGroup"]] object];
			self.rateType = [Soap getNodeValue: node withName: @"rateType"];
			self.priceType = [[Soap getNodeValue: node withName: @"priceType"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"AlternatePropertyListRequest"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<originalHotelId>%@</originalHotelId>", [NSString stringWithFormat: @"%ld", self.originalHotelId]];
		if (self.arrivalDate != nil) [s appendFormat: @"<arrivalDate>%@</arrivalDate>", [[self.arrivalDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.departureDate != nil) [s appendFormat: @"<departureDate>%@</departureDate>", [[self.departureDate stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<originalAverageNightlyRate>%@</originalAverageNightlyRate>", [NSString stringWithFormat: @"%f", self.originalAverageNightlyRate]];
		if (self.RoomGroup != nil && self.RoomGroup.count > 0) {
			[s appendFormat: @"<RoomGroup>%@</RoomGroup>", [SDZRoomGroup serialize: self.RoomGroup]];
		} else {
			[s appendString: @"<RoomGroup/>"];
		}
		if (self.rateType != nil) [s appendFormat: @"<rateType>%@</rateType>", [[self.rateType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<priceType>%@</priceType>", [NSString stringWithFormat: @"%i", self.priceType]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZAlternatePropertyListRequest class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.arrivalDate = nil;
		self.departureDate = nil;
		self.RoomGroup = nil;
		self.rateType = nil;
		[super dealloc];
	}

@end
